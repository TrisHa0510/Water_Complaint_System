// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WaterComplaintSystem.Data;

#nullable disable

namespace WaterComplaintSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("WaterComplaintSystem.Models.Citizen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Citizens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street, Ward 1",
                            Email = "alice.w@email.com",
                            Name = "Alice Williams",
                            Phone = "9123456780"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Avenue, Ward 2",
                            Email = "bob.m@email.com",
                            Name = "Bob Miller",
                            Phone = "9123456781"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Road, Ward 3",
                            Email = "carol.g@email.com",
                            Name = "Carol Garcia",
                            Phone = "9123456782"
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Elm Street, Ward 4",
                            Email = "david.m@email.com",
                            Name = "David Martinez",
                            Phone = "9123456783"
                        },
                        new
                        {
                            Id = 5,
                            Address = "654 Maple Drive, Ward 5",
                            Email = "eva.a@email.com",
                            Name = "Eva Anderson",
                            Phone = "9123456784"
                        });
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedWorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CitizenId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ResolvedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("WardId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssignedWorkerId");

                    b.HasIndex("CitizenId");

                    b.HasIndex("WardId");

                    b.ToTable("Complaints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CitizenId = 1,
                            CreatedDate = new DateTime(2025, 10, 24, 15, 9, 1, 373, DateTimeKind.Local).AddTicks(9850),
                            Description = "Water supply completely stopped from 6 AM today",
                            Priority = "High",
                            Status = "Pending",
                            Title = "No water supply since morning",
                            WardId = 1
                        },
                        new
                        {
                            Id = 2,
                            AssignedWorkerId = 2,
                            CitizenId = 2,
                            CreatedDate = new DateTime(2025, 10, 21, 15, 9, 1, 373, DateTimeKind.Local).AddTicks(9859),
                            Description = "Water pressure very low, difficult to use",
                            Priority = "Medium",
                            Status = "InProgress",
                            Title = "Low water pressure",
                            WardId = 2
                        },
                        new
                        {
                            Id = 3,
                            CitizenId = 3,
                            CreatedDate = new DateTime(2025, 10, 25, 15, 9, 1, 373, DateTimeKind.Local).AddTicks(9862),
                            Description = "Water coming out is brownish in color",
                            Priority = "Critical",
                            Status = "Pending",
                            Title = "Dirty water supply",
                            WardId = 3
                        },
                        new
                        {
                            Id = 4,
                            AssignedWorkerId = 4,
                            CitizenId = 4,
                            CreatedDate = new DateTime(2025, 10, 16, 15, 9, 1, 373, DateTimeKind.Local).AddTicks(9865),
                            Description = "Major pipeline leak on the street",
                            Priority = "High",
                            ResolvedDate = new DateTime(2025, 10, 23, 15, 9, 1, 373, DateTimeKind.Local).AddTicks(9866),
                            Status = "Resolved",
                            Title = "Pipeline leakage",
                            WardId = 4
                        },
                        new
                        {
                            Id = 5,
                            CitizenId = 5,
                            CreatedDate = new DateTime(2025, 10, 19, 15, 9, 1, 373, DateTimeKind.Local).AddTicks(9873),
                            Description = "Water supply timing not consistent",
                            Priority = "Low",
                            Status = "Pending",
                            Title = "Irregular water timing",
                            WardId = 5
                        });
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.ComplaintPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComplaintId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintId");

                    b.ToTable("ComplaintPhotos");
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Wards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = "Central Business District",
                            Description = "Downtown commercial area",
                            Name = "Ward 1"
                        },
                        new
                        {
                            Id = 2,
                            Area = "Residential North",
                            Description = "Northern residential zone",
                            Name = "Ward 2"
                        },
                        new
                        {
                            Id = 3,
                            Area = "Industrial East",
                            Description = "Eastern industrial sector",
                            Name = "Ward 3"
                        },
                        new
                        {
                            Id = 4,
                            Area = "Suburban South",
                            Description = "Southern suburban area",
                            Name = "Ward 4"
                        },
                        new
                        {
                            Id = 5,
                            Area = "Commercial West",
                            Description = "Western commercial district",
                            Name = "Ward 5"
                        });
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WardId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WardId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.smith@municipal.gov",
                            Name = "John Smith",
                            Phone = "9876543210",
                            WardId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "sarah.johnson@municipal.gov",
                            Name = "Sarah Johnson",
                            Phone = "9876543211",
                            WardId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "michael.brown@municipal.gov",
                            Name = "Michael Brown",
                            Phone = "9876543212",
                            WardId = 3
                        },
                        new
                        {
                            Id = 4,
                            Email = "emily.davis@municipal.gov",
                            Name = "Emily Davis",
                            Phone = "9876543213",
                            WardId = 4
                        },
                        new
                        {
                            Id = 5,
                            Email = "robert.wilson@municipal.gov",
                            Name = "Robert Wilson",
                            Phone = "9876543214",
                            WardId = 5
                        });
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.Complaint", b =>
                {
                    b.HasOne("WaterComplaintSystem.Models.Worker", "AssignedWorker")
                        .WithMany("Complaints")
                        .HasForeignKey("AssignedWorkerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WaterComplaintSystem.Models.Citizen", "Citizen")
                        .WithMany("Complaints")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WaterComplaintSystem.Models.Ward", "Ward")
                        .WithMany("Complaints")
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedWorker");

                    b.Navigation("Citizen");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.ComplaintPhoto", b =>
                {
                    b.HasOne("WaterComplaintSystem.Models.Complaint", "Complaint")
                        .WithMany("Photos")
                        .HasForeignKey("ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complaint");
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.Worker", b =>
                {
                    b.HasOne("WaterComplaintSystem.Models.Ward", "Ward")
                        .WithMany("Workers")
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.Citizen", b =>
                {
                    b.Navigation("Complaints");
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.Complaint", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.Ward", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("WaterComplaintSystem.Models.Worker", b =>
                {
                    b.Navigation("Complaints");
                });
#pragma warning restore 612, 618
        }
    }
}
